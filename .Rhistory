plot(game_data_modified$Year, game_data_modified$Critics_score)
View(developer_mean)
View(developer_mean)
View(company_mean)
plot(developer_mean$n,developer_mean$Mean)
year_mean <- game_data_modified %>% group_by(Year) %>% summarise(Mean = mean(Critics_score), n = n())
View(year_mean)
year_mean_filtered <- filter(year_mean, n >5)
View(year_mean)
View(year_mean_filtered)
plot(year_mean_filtered$Year, year_mean_filtered$Mean)
View(year_mean_filtered)
year_mean_filtered <- filter(year_mean, n > 20)
plot(year_mean_filtered$Year, year_mean_filtered$Mean)
year_mean_filtered <- filter(year_mean, n > 52)
plot(year_mean_filtered$Year, year_mean_filtered$Mean)
year_mean_users <- game_data_modified %>% group_by(Year) %>% summarise(Mean = mean(Users_Score), n = n())
View(year_mean_users)
game_data_users_filtered <- filter(game_data_modified, Users > 100)
game_data_users_filtered <- filter(game_data_modified, Number_of_users > 100)
View(game_data_users_filtered)
year_mean_users <- game_data_users_filtered %>% group_by(Year) %>% summarise(Mean = mean(Users_Score), n = n())
View(year_mean_users)
plot(year_mean_users$Year, year_mean_users$Mean)
plot(Year = year_mean_users$Year, Number of Users = year_mean_users$Mean)
plot(Year = year_mean_users$Year, Users = year_mean_users$Mean)
plot(year_mean_users$Year, year_mean_users$Mean,
xlab = "Year", ylab = "User Score")
plot(year_mean_filtered$Year, year_mean_filtered$Mean, xlab = "Year", ylab = "Critics Score")
View(year_mean_filtered)
View(year_mean_users)
# Graficamos la popularidad de los videojuegos a través de los años.
plot(year_mean_users$Year, year_mean_users$n)
# Graficamos la popularidad de los videojuegos a través de los años.
plot(year_mean_users$Year, year_mean_users$n,
xlab = "Year", ylab = "Number of players")
library("dplyr")
library("lubridate")
library("ggplot2")
library("tidyverse")
getwd()
setwd("C:/Users/Carlos Alvarez/Desktop/DemoDay")
game_data <- read.csv(file.choose()) # Usaremos la tabla game_data_exp.
str(game_data) # Tipo de las variables.
game_data_modified <- game_data %>% mutate(Release_Date = mdy(game_data$r.date))
str(game_data_modified) # Se creo el objeto para las fechas.
game_data_modified <- game_data_modified[,-c(4)] # Eliminamos la columna extra de las fechas.
game_data_modified <- game_data_modified %>% rename(Name = name, Console = platform, Company = company, Critics_score = score, Users_score = user_score, Developer = developer, Genre = genre, Number_of_players = players, Number_of_critics = critics, Number_of_users = users)
str(game_data_modified) # Se necesita cambiar el tipo de objeto de la puntuación el usuario.
game_data_modified <- game_data_modified %>% mutate(Users_Score = as.numeric(Users_score))
game_data_modified <- game_data_modified[,-c(5)] # Se elimina la columna original.
str(game_data_modified)
group_critics_score <- game_data_modified %>% group_by(Critics_score) %>% summarise(Critics_score, n = n())
View(group_critics_score)
m_log_critics <- glm(group_critics_score$Critics_score ~ group_critics_score$n , data = game_data_modified, family = "binomial")
m_log_critics <- glm(group_critics_score$Critics_score ~ group_critics_score$n , data = group_critics_score, family = "binomial")
m_log_critics <- glm(group_critics_score$n ~ group_critics_score$Critics_score, data = group_critics_score, family = "binomial")
str(group_critics_score)
m_log_critics <- glm(as.factor(group_critics_score$n) ~ group_critics_score$Critics_score, data = group_critics_score, family = "binomial")
View(m_log_critics)
ggplot(data = m_log_critics, aes(x = group_critics_score$Critics_score, y = group_critics_score$n))
ggplot(data = m_log_critics, aes(x = group_critics_score$Critics_score, y = group_critics_score$n)) +
geom_point(aes(color = as.factor(group_critics_score$n)), shape = 1)
ggplot(data = group_critics_score, aes(x = group_critics_score$Critics_score, y = group_critics_score$n)) +
geom_point(aes(color = as.factor(group_critics_score$n)), shape = 1)
ggplot(data = group_critics_score, aes(x = group_critics_score$Critics_score, y = group_critics_score$n)) +
geom_point(aes(color = group_critics_score$n, shape = 1))
ggplot(data = group_critics_score, aes(x = group_critics_score$Critics_score, y = group_critics_score$n)) +
geom_point(aes(color = group_critics_score$n, shape = 1))
as.factor(
ggplot(data = group_critics_score, aes(x = group_critics_score$Critics_score, y = group_critics_score$n)) +
geom_point(aes(color = as.factor(group_critics_score$n)), shape = 1)
ggplot(data = group_critics_score, aes(x = group_critics_score$Critics_score, y = group_critics_score$n)) +
geom_point(aes(color = as.factor(group_critics_score$n)), shape = 1)
ggplot(data = m_log_critics, aes(x = group_critics_score$Critics_score, y = group_critics_score$n)) +
geom_point(aes(color = as.factor(group_critics_score$n)), shape = 1)
if(Critics_score <= 50) {
group_critics_score <- group_critics_score %>% mutate(Factor = as.factor(0))
} else {
group_critics_score <- group_critics_score %>% mutate(Factor = as.factor(1))
}
if(group_critics_score$Critics_score <= 50) {
group_critics_score <- group_critics_score %>% mutate(Factor = as.factor(0))
} else {
group_critics_score <- group_critics_score %>% mutate(Factor = as.factor(1))
}
View(group_critics_score)
if(group_critics_score$Critics_score >= 50) {
group_critics_score <- group_critics_score %>% mutate(Factor = as.factor(0))
} else {
group_critics_score <- group_critics_score %>% mutate(Factor = as.factor(1))
}
View(group_critics_score)
if(group_critics_score$n >= 300) {
group_critics_score <- group_critics_score %>% mutate(Factor = as.factor(1))
} else {
group_critics_score <- group_critics_score %>% mutate(Factor = as.factor(0))
}
if(group_critics_score$n >= 300) {
group_critics_score <- group_critics_score %>% mutate(Factor = as.factor(1))
} else(group_critics_score$n < 300) {
group_critics_score <- group_critics_score %>% mutate(Factor = as.factor(0))
}
if(group_critics_score$n >= 300) {
group_critics_score <- group_critics_score %>% mutate(Factor = as.factor(1))
} else(group_critics_score$n < 300) {
group_critics_score <- group_critics_score %>% mutate(Factor = as.factor(0))
}
if(group_critics_score$n >= 300) {
group_critics_score <- group_critics_score %>% mutate(Factor = as.factor(1))
} else(group_critics_score$n < 300) {
group_critics_score <- group_critics_score %>% mutate(Factor = as.factor(0))
}}
if(group_critics_score$n >= 300) {
group_critics_score <- group_critics_score %>% mutate(Factor = as.factor(1))
} ifelse(group_critics_score$n < 300) {
group_critics_score <- group_critics_score %>% mutate(Factor = as.factor(0))
}
ifelse(group_critics_score$n < 300) {
group_critics_score <- group_critics_score %>% mutate(Factor = as.factor(0))
}
group_critics_score <- group_critics_score %>% mutate(Factor = as.factor(0))}
ifelse(group_critics_score$n >= 300,group_critics_score <- group_critics_score %>% mutate(Factor = as.factor(1)),group_critics_score <- group_critics_score %>% mutate(Factor = as.factor(0))) {
group_critics_score <- group_critics_score %>% mutate(Factor = as.factor(1))}
ifelse(group_critics_score$n >= 300,group_critics_score <- group_critics_score %>% mutate(Factor = as.factor(1)),group_critics_score <- group_critics_score %>% mutate(Factor = as.factor(0)))
View(group_critics_score)
group_critics_score <- group_critics_score %>% mutate(Factor = as.factor(0))}
group_critics_score <- group_critics_score %>% mutate(Factor = as.factor(0))}
}
if(group_critics_score$n >= 300) {
group_critics_score <- group_critics_score %>% mutate(Factor = as.factor(1))
} else {
group_critics_score <- group_critics_score %>% mutate(Factor = as.factor(0))}
}
group_critics_score <- group_critics_score %>% mutate(Factor = as.factor(0))}
group_critics_score <- group_critics_score %>% mutate(Factor = as.factor(0))
if(group_critics_score$n >= 300) {
group_critics_score <- group_critics_score %>% mutate(Factor = as.factor(1))
} else {
group_critics_score <- group_critics_score %>% mutate(Factor = as.factor(0))
View(group_critics_score)
if(group_critics_score$n >= 300) {
group_critics_score <- group_critics_score %>% mutate(Factor = as.factor(1))
} else {
group_critics_score <- group_critics_score %>% mutate(Factor = as.factor(0))
}
if(group_critics_score$n >= 300) {
group_critics_score <- group_critics_score %>% mutate(Factor = as.factor(1))
} else {
group_critics_score <- group_critics_score %>% mutate(Factor = as.factor(0))
}
View(group_critics_score)
View(group_critics_score)
View(group_critics_score)
View(group_critics_score)
View(group_critics_score)
View(group_critics_score)
str(group_critics_score)
View(game_data_modified)
ggplot(data = m_log_critics, aes(x = group_critics_score$Critics_score, y = group_critics_score$Game_factor)) +
geom_point(aes(color = as.factor(group_critics_score$Game_factor)), shape = 1) +
geom_smooth(method = "gaussian",
method.args = list(family = "binomial"),
color = "gray20",
se = FALSE)
library("dplyr")
library("lubridate")
library("ggplot2")
library("tidyverse")
ggplot(data = m_log_critics, aes(x = group_critics_score$Critics_score, y = group_critics_score$Game_factor)) +
geom_point(aes(color = as.factor(group_critics_score$Game_factor)), shape = 1) +
geom_smooth(method = "gaussian",
method.args = list(family = "binomial"),
color = "gray20",
se = FALSE)
library("dplyr")
library("lubridate")
library("ggplot2")
library("tidyverse")
getwd()
setwd("C:/Users/Carlos Alvarez/Desktop/DemoDay")
game_data <- read.csv(file.choose()) # Usaremos la tabla game_data_exp.
str(game_data) # Tipo de las variables.
game_data_modified <- game_data %>% mutate(Release_Date = mdy(game_data$r.date))
str(game_data_modified) # Se creo el objeto para las fechas.
game_data_modified <- game_data_modified[,-c(4)] # Eliminamos la columna extra de las fechas.
game_data_modified <- game_data_modified %>% rename(Name = name, Console = platform, Company = company, Critics_score = score, Users_score = user_score, Developer = developer, Genre = genre, Number_of_players = players, Number_of_critics = critics, Number_of_users = users)
str(game_data_modified) # Se necesita cambiar el tipo de objeto de la puntuación el usuario.
game_data_modified <- game_data_modified %>% mutate(Users_Score = as.numeric(Users_score))
game_data_modified <- game_data_modified[,-c(5)] # Se elimina la columna original.
str(game_data_modified)
str(game_data_modified)
group_critics_score <- game_data_modified %>% select(Critics_score)
group_critics_score <- group_critics_score %>% mutate(Game_factor = ifelse(Critics_score >= 60, 1, 0)) # 1 es bueno, 0 es malo.
ggplot(data = m_log_critics, aes(x = group_critics_score$Critics_score, y = group_critics_score$Game_factor)) +
geom_point(aes(color = as.factor(group_critics_score$Game_factor)), shape = 1) +
geom_smooth(method = "gaussian",
method.args = list(family = "binomial"),
color = "gray20",
se = FALSE)
group_critics_score <- game_data_modified %>% select(Critics_score)
group_critics_score <- group_critics_score %>% mutate(Game_factor = ifelse(Critics_score >= 60, 1, 0)) # 1 es bueno, 0 es malo.
ggplot(data = group_critics_score, aes(x = group_critics_score$Critics_score, y = group_critics_score$Game_factor)) +
geom_point(aes(color = as.factor(group_critics_score$Game_factor)), shape = 1) +
geom_smooth(method = "glm",
method.args = list(family = "binomial"),
color = "gray20",
se = FALSE)
group_critics_score <- game_data_modified %>% select(Critics_score)
group_critics_score <- group_critics_score %>% mutate(Game_factor = ifelse(Critics_score >= 60, as.factor(1), as.factor(0))) # 1 es bueno, 0 es malo.
ggplot(data = group_critics_score, aes(x = group_critics_score$Critics_score, y = group_critics_score$Game_factor)) +
geom_point(aes(color = as.factor(group_critics_score$Game_factor)), shape = 1) +
geom_smooth(method = "glm",
method.args = list(family = "binomial"),
color = "gray20",
se = FALSE)
group_critics_score <- game_data_modified %>% select(Critics_score)
group_critics_score <- group_critics_score %>% mutate(Game_factor = ifelse(Critics_score >= 60, 1, 0)) # 1 es bueno, 0 es malo.
ggplot(data = group_critics_score, aes(x = group_critics_score$Critics_score, y = group_critics_score$Game_factor)) +
geom_point(aes(color = as.factor(group_critics_score$Game_factor)), shape = 1) +
geom_smooth(method = "glm",
method.args = list(family = "binomial"),
color = "gray20",
se = FALSE)
ggplot(data = group_critics_score, aes(x = Critics_score, y = Game_factor)) +
geom_point(aes(color = as.factor(Game_factor)), shape = 1) +
geom_smooth(method = "glm",
method.args = list(family = "binomial"),
color = "gray20",
se = FALSE)
group_critics_score <- game_data_modified %>% select(Critics_score)
group_critics_score <- group_critics_score %>% mutate(Game_factor = ifelse(as.factor(Critics_score >= 60, 1, 0))) # 1 es bueno, 0 es malo.
ggplot(data = group_critics_score, aes(x = Critics_score, y = Game_factor)) +
geom_point(aes(color = as.factor(Game_factor)), shape = 1) +
geom_smooth(method = "glm",
method.args = list(family = "binomial"),
color = "gray20",
se = FALSE)
group_critics_score <- game_data_modified %>% select(Critics_score)
group_critics_score <- group_critics_score %>% mutate(Game_factor = ifelse(Critics_score >= 60, 1, 0)) # 1 es bueno, 0 es malo.
ggplot(data = group_critics_score, aes(x = Critics_score, y = Game_factor)) +
geom_point(aes(color = as.factor(Game_factor)), shape = 1) +
geom_smooth(method = "glm",
method.args = list(family = "binomial"),
color = "gray20",
se = FALSE)
ggplot(data = group_critics_score, aes(x = Critics_score, y = Game_factor)) +
geom_point(aes(color = as.factor(Game_factor)), shape = 1) +
geom_smooth(method = "glm",
method.args = list(family = "gaussian"),
color = "gray20",
se = FALSE)
ggplot(data = group_critics_score, aes(x = Critics_score, y = Game_factor)) +
geom_point(aes(color = as.factor(Game_factor)), shape = 1) +
geom_smooth(method = "glm",
method.args = list(family = "binomial"),
color = "gray20",
se = FALSE)
ggplot(data = group_critics_score, aes(x = Critics_score, y = Game_factor)) +
geom_point(aes(color = as.factor(Game_factor)), shape = 1) +
geom_smooth(method = "glm",
method.args = list(family = "quasibinomial"),
color = "gray20",
se = FALSE)
ggplot(data = group_critics_score, aes(x = Critics_score, y = Game_factor)) +
geom_point(aes(color = as.factor(Game_factor)), shape = 1) +
geom_smooth(method = "lm",
method.args = list(family = "binomial"),
color = "gray20",
se = FALSE)
ggplot(data = group_critics_score, aes(x = Critics_score, y = Game_factor)) +
geom_point(aes(color = as.factor(Game_factor)), shape = 1) +
geom_smooth(method = "glm",
method.args = list(family = "binomial"),
color = "gray20",
se = FALSE)
ggplot(data = group_critics_score, aes(x = Critics_score, y = Game_factor)) +
geom_point(aes(color = as.factor(log(Game_factor))), shape = 1) +
geom_smooth(method = "glm",
method.args = list(family = "binomial"),
color = "gray20",
se = FALSE)
library("dplyr")
library("lubridate")
library("ggplot2")
library("tidyverse")
getwd()
setwd("C:/Users/Carlos Alvarez/Desktop/DemoDay")
game_data <- read.csv(file.choose()) # Usaremos la tabla game_data_exp.
game_data_modified <- game_data %>% mutate(Release_Date = mdy(game_data$r.date))
str(game_data_modified) # Se creo el objeto para las fechas.
game_data_modified <- game_data_modified[,-c(4)] # Eliminamos la columna extra de las fechas.
game_data_modified <- game_data_modified %>% rename(Name = name, Console = platform, Company = company, Critics_score = score, Users_score = user_score, Developer = developer, Genre = genre, Number_of_players = players, Number_of_critics = critics, Number_of_users = users)
str(game_data_modified) # Se necesita cambiar el tipo de objeto de la puntuación el usuario.
game_data_modified <- game_data_modified %>% mutate(Users_Score = as.numeric(Users_score))
game_data_modified <- game_data_modified[,-c(5)] # Se elimina la columna original.
str(game_data_modified)
group_critics_score <- game_data_modified %>% select(Critics_score)
group_critics_score <- group_critics_score %>% mutate(Game_factor = ifelse(Critics_score >= 60, 1, 0)) # 1 es bueno, 0 es malo.
ggplot(data = group_critics_score, aes(x = Critics_score, y = Game_factor)) +
geom_point(aes(color = as.factor(log(Game_factor))), shape = 1) +
geom_smooth(method = "glm",
method.args = list(family = "binomial"),
color = "gray20",
se = FALSE)
ggplot(game_data_modified, aes(Critics_score)) +
geom_histogram(col = "black", fill= "red") +
ggtitle("Critics score by console") +
xlab("Score") +
ylab("Times") +
geom_vline(xintercept = mean(game_data_modified$Critics_score))
ggplot(game_data_modified, aes(log(Critics_score))) +
geom_histogram(col = "black", fill= "red") +
ggtitle("Critics score by console") +
xlab("Score") +
ylab("Times")
ggplot(game_data_modified, aes(exp(Critics_score))) +
geom_histogram(col = "black", fill= "red") +
ggtitle("Critics score by console") +
xlab("Score") +
ylab("Times")
ggplot(game_data_modified, aes((Critics_score)^2)) +
geom_histogram(col = "black", fill= "red") +
ggtitle("Critics score by console") +
xlab("Score") +
ylab("Times")
ggplot(game_data_modified, aes((Critics_score)^2)) +
geom_histogram(col = "black", fill= "red") +
ggtitle("Critics score by console") +
xlab("Score") +
ylab("Times") +
geom_vline(xintercept = (mean(game_data_modified$Critics_score))^2)
ggplot(game_data_modified, aes(log(Critics_score))) +
geom_histogram(col = "black", fill= "red") +
ggtitle("Critics score by console") +
xlab("Score") +
ylab("Times")
ggplot(game_data_modified, aes(Users_Score)) +
geom_histogram(col = "black", fill= "red") +
ggtitle("Users score by console") +
xlab("Score") +
ylab("Times") +
geom_vline(xintercept = mean(na.omit(game_data_modified$Users_Score)))
#Normalizamos la serie de datos
ggplot(game_data_modified, aes((Users_Score)^2)) +
geom_histogram(col = "black", fill= "red") +
ggtitle("Users score by console") +
xlab("Score") +
ylab("Times")
#Normalizamos la serie de datos
ggplot(game_data_modified, aes((Users_Score)^2)) +
geom_histogram(col = "black", fill= "red") +
ggtitle("Users score by console") +
xlab("Score") +
ylab("Times") +
geom_vline(xintercept = (mean(game_data_modified$Users_Score))^2)
geom_vline(xintercept = (mean(na.omit(game_data_modified$Users_Score))^2)
ggplot(game_data_modified, aes((Users_Score)^2)) +
geom_histogram(col = "black", fill= "red") +
ggtitle("Users score by console") +
xlab("Score") +
ylab("Times") +
geom_vline(xintercept = (mean(na.omit(game_data_modified$Users_Score))^2))
#Normalizamos la serie de datos
ggplot(game_data_modified, aes((Users_Score)^2)) +
geom_histogram(col = "black", fill= "red") +
ggtitle("Users score by console") +
xlab("Score") +
ylab("Times") +
geom_vline(xintercept = (mean(na.omit(game_data_modified$Users_Score))^2))
ggplot(data = group_critics_score, aes(x = Critics_score, y = Game_factor)) +
geom_point(aes(color = as.factor((Game_factor))), shape = 1) +
geom_smooth(method = "glm",
method.args = list(family = "binomial"),
color = "gray20",
se = FALSE)
ggplot(data = group_critics_score, aes(x = Critics_score, y = Game_factor)) +
geom_point(aes(color = as.factor((Game_factor)^2)), shape = 1) +
geom_smooth(method = "glm",
method.args = list(family = "binomial"),
color = "gray20",
se = FALSE)
ggplot(data = group_critics_score, aes(x = (Critics_score)^2, y = Game_factor)) +
geom_point(aes(color = as.factor((Game_factor))), shape = 1) +
geom_smooth(method = "glm",
method.args = list(family = "binomial"),
color = "gray20",
se = FALSE)
ggplot(data = group_critics_score, aes(x = Critics_score, y = Game_factor)) +
geom_point(aes(color = as.factor((sqrt(Game_factor))), shape = 1) +
geom_smooth(method = "glm",
method.args = list(family = "binomial"),
color = "gray20",
se = FALSE))
ggplot(data = group_critics_score, aes(x = Critics_score, y = Game_factor)) +
geom_point(aes(color = as.factor((sqrt(Game_factor))), shape = 1) +
geom_smooth(method = "glm",
method.args = list(family = "binomial"),
color = "gray20",
se = FALSE))
ggplot(data = group_critics_score, aes(x = Critics_score, y = Game_factor)) +
geom_point(aes(color = as.factor(sqrt(Game_factor)), shape = 1) +
geom_smooth(method = "glm",
method.args = list(family = "binomial"),
color = "gray20",
se = FALSE))
ggplot(game_data_filtered, aes(Number_of_critics,Users_Score)) +
geom_point() +
facet_wrap("Company") +
ggtitle("Users Score by company") +
xlab("Number of users") +
ylab("Score")
game_data_filtered <- filter(game_data_modified, Name != "The Last of Us Part II")
ggplot(game_data_filtered, aes(Number_of_critics,Users_Score)) +
geom_point() +
facet_wrap("Company") +
ggtitle("Users Score by company") +
xlab("Number of users") +
ylab("Score")
# Extraemos el año de lanzamiento de cada juego.
game_data_modified$Year <- format(game_data_modified$Release_Date, format = "%Y")
# Graficamos la calidad de los juegos año tras año según la crítica.
year_mean <- game_data_modified %>% group_by(Year) %>% summarise(Mean = mean(Critics_score), n = n())
year_mean_filtered <- filter(year_mean, n > 52)
plot(year_mean_filtered$Year, year_mean_filtered$Mean, xlab = "Year", ylab = "Critics Score")
# Graficamos la calidad de los juegos año tras año según los jugadores.
game_data_users_filtered <- filter(game_data_modified, Number_of_users > 100)
year_mean_users <- game_data_users_filtered %>% group_by(Year) %>% summarise(Mean = mean(Users_Score), n = n())
plot(year_mean_users$Year, year_mean_users$Mean,
xlab = "Year", ylab = "User Score")
# Graficamos la popularidad de los videojuegos a través de los años.
plot(year_mean_users$Year, year_mean_users$n,
xlab = "Year", ylab = "Number of players")
library("dplyr")
library("lubridate")
library("ggplot2")
library("tidyverse")
getwd()
setwd("C:/Users/Carlos Alvarez/Desktop/DemoDay")
game_data <- read.csv(file.choose()) # Usaremos la tabla game_data_exp.
str(game_data) # Tipo de las variables.
game_data_modified <- game_data %>% mutate(Release_Date = mdy(game_data$r.date))
str(game_data_modified) # Se creo el objeto para las fechas.
game_data_modified <- game_data_modified[,-c(4)] # Eliminamos la columna extra de las fechas.
game_data_modified <- game_data_modified %>% rename(Name = name, Console = platform, Company = company, Critics_score = score, Users_score = user_score, Developer = developer, Genre = genre, Number_of_players = players, Number_of_critics = critics, Number_of_users = users)
str(game_data_modified) # Se necesita cambiar el tipo de objeto de la puntuación el usuario.
game_data_modified <- game_data_modified %>% mutate(Users_Score = as.numeric(Users_score))
game_data_modified <- game_data_modified[,-c(5)] # Se elimina la columna original.
str(game_data_modified)
ggplot(game_data_modified, aes(Critics_score)) +
geom_histogram(col = "black", fill= "red") +
ggtitle("Critics score by console") +
xlab("Score") +
ylab("Times") +
geom_vline(xintercept = mean(game_data_modified$Critics_score))
ggplot(game_data_modified, aes((Critics_score)^2)) +
geom_histogram(col = "black", fill= "red") +
ggtitle("Critics score by console") +
xlab("Score") +
ylab("Times") +
geom_vline(xintercept = (mean(game_data_modified$Critics_score))^2)
var((Critics_score)^2))
var(Critics_score)^2)
var((Critics_score)^2)
var((game_data_modified$Critics_score)^2)
sd((game_data_modified$Critics_score)^2)
sd_critics <- sd((game_data_modified$Critics_score)^2)
mean_critics <- mean(game_data_modified$Critics_score))^2
mean_critics <- (mean(game_data_modified$Critics_score))^2
prob_critics <- pnorm(q = mean_critics, mean = mean_critics, sd = sd_critics)
prob_critics <- pnorm(q = 0.80, mean = mean_critics, sd = sd_critics)
prob_critics <- sqrt(pnorm(q = 0.80, mean = mean_critics, sd = sd_critics))
prob_critics <- sqrt(pnorm(q = 0.60, mean = mean_critics, sd = sd_critics))
prob_critics <- sqrt(pnorm(q = 0.80, mean = mean_critics, sd = sd_critics))
prob_critics <- sqrt(pnorm(q = 0.60, mean = mean_critics, sd = sd_critics))
prob_critics <- sqrt(pnorm(q = 0.90, mean = mean_critics, sd = sd_critics))
prob_critics <- pnorm(q = 60, mean = mean_critics, sd = sd_critics)
prob_critics <- pnorm(q = 80, mean = mean_critics, sd = sd_critics)
prob_critics <- pnorm(q = 60, mean = mean_critics, sd = sd_critics)
prob_critics <- pnorm(q = 80, mean = mean_critics, sd = sd_critics)
prob_critics <- pnorm(q = 50, mean = mean_critics, sd = sd_critics)
prob_critics <- pnorm(q = 3600, mean = mean_critics, sd = sd_critics)
prob_critics <- pnorm(q = (60)^2, mean = mean_critics, sd = sd_critics)
prob_critics <- pnorm(q = (80)^2, mean = mean_critics, sd = sd_critics)
sd_users <- sd((game_data_modified$Users_Score)^2)
mean_users <- (mean(na.omit(game_data_modified$Users_score))^2)
prob_users <- pnorm(q = (60)^2, mean = mean_users, sd = sd_users)
prob_users <- pnorm(q = (80)^2, mean = mean_users, sd = sd_users)
sd_users <- sd((game_data_modified$Users_Score)^2)
mean_users <- (mean(na.omit(game_data_modified$Users_Score))^2)
prob_users <- pnorm(q = (60)^2, mean = mean_users, sd = sd_users)
prob_users <- pnorm(q = (80)^2, mean = mean_users, sd = sd_users)
sd_users <- sd((game_data_modified$Users_Score)^2)
mean_users <- (mean(na.omit(game_data_modified$Users_Score))^2)
prob_users <- pnorm(q = (60)^2, mean = mean_users, sd = sd_users)
prob_users <- pnorm(q = (80)^2, mean = mean_users, sd = sd_users)
sd_users <- sd((game_data_modified$Users_Score)^2)
mean_users <- (mean(na.omit(game_data_modified$Users_Score))^2)
prob_users <- pnorm(q = (6)^2, mean = mean_users, sd = sd_users)
prob_users <- pnorm(q = (8)^2, mean = mean_users, sd = sd_users)
sd_users <- sd((game_data_modified$Users_Score)^2)
mean_users <- (mean(na.omit(game_data_modified$Users_Score))^2)
prob_users <- pnorm(q = (6.0)^2, mean = mean_users, sd = sd_users)
prob_users <- pnorm(q = (8.0)^2, mean = mean_users, sd = sd_users)
sd_users <- sd(na.omit(game_data_modified$Users_Score)^2)
mean_users <- (mean(na.omit(game_data_modified$Users_Score))^2)
prob_users <- pnorm(q = (6.0)^2, mean = mean_users, sd = sd_users)
prob_users <- pnorm(q = (8.0)^2, mean = mean_users, sd = sd_users)
prob_users <- pnorm(q = (6.0)^2, mean = mean_users, sd = sd_users)
prob_users <- pnorm(q = (8.0)^2, mean = mean_users, sd = sd_users)
prob_users <- pnorm(q = (6.0)^2, mean = mean_users, sd = sd_users)
prob_critics <- pnorm(q = (60)^2, mean = mean_critics, sd = sd_critics)
