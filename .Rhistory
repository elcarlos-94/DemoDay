(my_scatplot <- ggplot(mtcars,
aes(x=wt,y=mpg)) +
geom_point() +
stat_smooth(method = "lm", formula = mpg ~ poly(wt,2)))
(my_scatplot <- ggplot(mtcars,
aes(x=wt,y=mpg)) +
geom_point() +
stat_smooth(method = "lm", formula = mpg ~ poly(wt,2), size = 1))
(my_scatplot <- ggplot(mtcars,
aes(x=wt,y=mpg)) +
geom_point() +
stat_smooth(method = "lm", formula = mpg ~ poly(mtcars$wt,2), size = 1))
(my_scatplot <- ggplot(mtcars,
aes(x=wt,y=mpg)) +
geom_point() +
stat_smooth(method = "lm", formula = mtcars$mpg ~ poly(mtcars$wt,2), size = 1))
my_scatplot + xlab('Weight (x 1000lbs)') + ylab('Miles per Gallon')
(my_scatplot <- ggplot(mtcars,
aes(x=wt,y=mpg)) +
geom_point() +
stat_smooth(method = "lm", formula = mtcars$wt ~ poly(mtcars$mpg,2), size = 1))
(my_scatplot <- ggplot(mtcars,
aes(x=wt,y=mpg)) +
geom_point() +
stat_smooth(method = "lm", formula = y ~ poly(x,2), size = 1))
(my_scatplot <- ggplot(mtcars, aes(x = wt, y = mpg, col = cyl)) + geom_point())
my_scatplot + labs(x='Weight (x1000lbs)',y='Miles per Gallon',colour='Number of\n Cylinders')
my_scatplot + facet_wrap("cyl")
my_scatplot + facet_grid(am~cyl)
getwd()
setwd("C:/Users/Carlos Alvarez/Desktop/DemoDay")
game_data <- read.csv(file.choose())
View(data)
View(data)
setwd("C:/Users/Carlos Alvarez/Desktop/DemoDay")
game_data <- read.csv(file.choose())
View(game_data)
str(game_data)
library("dplyr")
game_data_date <- mutate(game_data, r.date = as.Date(r.date, "%Y-%m-%d"))
View(game_data_date)
str(game_data_date) # Tipo de las variables.
game_data_date <- mutate(game_data, r.date = as.Date(r.date, "%d-%m-%Y"))
game_data_date <- mutate(game_data, r.date = as.Date(r.date, "%d-%Y"))
game_data <- read.csv(file.choose()) # Usaremos la tabla game_data_exp.
str(game_data) # Tipo de las variables.
game_data_date <- mutate(game_data, r.date = as.Date(r.date, "%Y-%m-%d"))
game_data_date <- mutate(game_data, r.date = as.Date(r.date, "%Y/%m/%d"))
game_data <- read.csv(file.choose()) # Usaremos la tabla game_data_exp.
game_data_date <- mutate(game_data, r.date = as.Date(r.date, "%Y/%m/%d"))
game_data <- read.csv(file.choose()) # Usaremos la tabla game_data_exp.
str(game_data) # Tipo de las variables.
game_data_date <- mutate(game_data, r.date = as.Date(r.date, "%Y/%m/%d"))
View(game_data_date)
game_data_date <- mutate(game_data, r.date = as.Date(r.date, "%d/%m/%Y"))
game_data_date <- mutate(game_data, r.date = as.Date(r.date, "%D/%M/%Y"))
game_data_date <- mutate(game_data, r.date = as.Date(r.date, "%d/%m/%Y"))
game_data_date <- mutate(game_data, r.date = as.Date(r.date, "%d-%m-%Y"))
game_data_date <- mutate(game_data, r.date = as.Date(r.date, "%d/%m/%Y"))
dates <- c("02/27/92", "02/27/92", "01/14/92", "02/28/92", "02/01/92")
as.Date(dates, "%m/%d/%y")
game_data_date <- mutate(game_data, r.date = as.Date(r.date, "%d/%m/%Y"))
View(game_data)
game_data_date <- mutate(game_data, r.date = as.Date(r.date, "%d/%m+/%Y"))
game_data_date <- mutate(game_data, r.date = as.Date(r.date, "%d/%m/%Y"))
str(game_data) # Tipo de las variables.
game_data <- read.csv(file.choose()) # Usaremos la tabla game_data_exp.
<-
game_data_date <- mutate(game_data, r.date = as.Date(r.date, "%d/%m/%Y"))
game_data_date <- mutate(game_data, r.date = na.locf(as.Date(r.date, origin = '1970-01-01'), na.rm=FALSE)
game_data_date <- mutate(game_data, r.date = na.locf(as.Date(r.date, origin = '1970-01-01'), na.rm=TRUE)
game_data_date <- mutate(game_data, r.date = na.locf(as.Date(r.date, origin = '1970-01-01'), na.rm=TRUE)
game_data_date <- mutate(game_data, r.date = na.locf(as.Date(r.date, origin = '11/23/1998'), na.rm=TRUE)
game_data_date <- mutate(game_data, r.date = na.locf(as.Date(r.date, origin = '11/23/1998'), na.rm=TRUE)
game_data_date <- mutate(game_data, r.date = na.locf(as.Date(r.date, origin = '11/23/1998'), na.rm=FALSE)
game_data_date <- mutate(game_data, r.date = na.locf(as.Date(r.date, origin = '11/23/1998'), na.rm=FALSE)
game_data_date <- mutate(game_data, r.date = as.Date(r.date, "%d/%m/%Y"))
game_data_date <- mutate(game_data, r.date = as.Date(r.date, "%d/%m/%Y"))
game_data_date <- mutate(game_data, r.date = as.Date(r.date, origin = "2000-12-31"))
game_data_date <- mutate(game_data, r.date = as.Date(r.date, origin = "2000/12/31"))
game_data_date <- mutate(game_data, r.date = as.Date(r.date, origin = "12/31/2000"))
game_data_date %>% mutate(r.date = as.Date(r.date, origin = "12/31/2000"))
game_data_date <- %>% mutate(r.date = as.Date(r.date, origin = "12/31/2000"))
View(game_data_date)
game_data_date %>% mutate(r.date = as.Date(r.date, origin = "12/31/2000"))
setwd("C:/Users/Carlos Alvarez/Desktop/DemoDay")
game_data <- read.csv(file.choose()) # Usaremos la tabla game_data_exp.
str(game_data) # Tipo de las variables.
game_data_date %>% mutate(r.date = as.Date(r.date, origin = "12/31/2000"))
View(game_data_date)
game_data %>% mutate(r.date = as.Date(r.date, origin = "12/31/2000"))
game_data %>% mutate(r.date = as.Date(r.date, origin = "11/23/1998"))
game_data %>% mutate(r.date = as.Date(r.date, origin = "11-23-1998"))
install.packages("lubridate")
library("lubridate")
game_data %>% mutate(r.date = as.Date(as.character(r.date), "%m/%d/%Y"))
View(game_data)
str(game_data) # Tipo de las variables.
game_data %>% mutate(r.date = as.Date(r.date, "%Y-%m-%d"))
View(game_data)
game_data_new <- game_data %>% mutate(r.date = as.Date(r.date, "%Y-%m-%d"))
View(game_data_new)
game_data_new <- game_data %>% mutate(r.date = as.Date(r.date, "%m-%d-%Y"))
game_data_new <- game_data %>% mutate(r.date = as.Date(as.character(r.date), "%m-%d-%Y"))
game_data_new <- mdy(r.date)
game_data_new <- mdy(game_data$r.date)
game_data_date <- game_data %>% mutate(mdy(game_data$r.date))
str(game_data) # Tipo de las variables.
str(game_data_date)
game_data_modified <- game_data %>% mutate(mdy(game_data$r.date))
str(game_data_modified) # Se creo el objeto para las fechas.
game_data_modified <- game_data %>% remove(r.date)
game_data_modified <- game_data %>% remove(game_data$r.date)
game_data_modified_2 <- game_data[,-3]
View(game_data_modified_2)
game_data_modified_2 <- game_data_modified[,-3]
game_data_modified_2 <- game_data_modified[,-3]
game_data_modified_2 <- game_data[,-3]
View(game_data_modified_2)
game_data_modified_2 <- game_data_modified[,-3]
game_data_modified_2 <- game_data_modified[,-4]
game_data_modified_2 <- game_data_modified[,-1]
game_data_modified_new <- game_data_modified[,-1]
game_data_modified_new <- game_data_modified[,-4]
game_data_modified_new <- game_data_modified[,-r.date]
game_data_modified_new <- game_data_modified[,-game_data_modified.date]
game_data_modified_new <- game_data_modified[,-game_data_modified$r.date]
game_data_modified_new <- game_data_modified[,-(game_data_modified$r.date)]
game_data_modified_new <- game_data[,-c(3)]
View(game_data_modified_new)
game_data_modified_new <- game_data_modified[,-c(3)]
View(game_data_date)
game_data_modified_new <- game_data_modified[,-c(13)]
library("dplyr")
install.packages("lubridate")
install.packages("lubridate")
getwd()
setwd("C:/Users/Carlos Alvarez/Desktop/DemoDay")
game_data <- read.csv(file.choose()) # Usaremos la tabla game_data_exp.
game_data_modified <- game_data %>% mutate(mdy(game_data$r.date))
library("dplyr")
game_data_modified <- game_data %>% mutate(mdy(game_data$r.date))
library("lubridate")
game_data_modified <- game_data %>% mutate(mdy(game_data$r.date))
str(game_data_modified) # Se creo el objeto para las fechas.
game_data_modified_new <- game_data_modified[,-c(3)]
View(game_data_modified_new)
game_data_modified <- game_data_modified[,-c(3)]
library("dplyr")
library("lubridate")
getwd()
setwd("C:/Users/Carlos Alvarez/Desktop/DemoDay")
game_data <- read.csv(file.choose()) # Usaremos la tabla game_data_exp.
str(game_data) # Tipo de las variables.
game_data_modified <- game_data %>% mutate(mdy(game_data$r.date))
str(game_data_modified) # Se creo el objeto para las fechas.
game_data_modified <- game_data_modified[,-c(3)]
game_data_modified <- game_data_modified[,-c(3)]
View(game_data_modified)
View(game_data_modified)
View(game_data)
game_data_modified <- game_data_modified[,-c(2)] # Eliminamos la columna extra de las fechas.
game_data_modified <- game_data %>% mutate(mdy(game_data$r.date))
game_data_modified <- game_data_modified[,-c(3)] # Eliminamos la columna extra de las fechas.
game_data_modified <- game_data %>% rename(name = "Name", platform = "Console", score = "Critics score", user_score = "Users score", developer = "Developer", genre = "Genre", players = "# of players", critics = "# of critics", users = "# of users", mdy(game_data$r.date) = "Release Date")
game_data_modified <- game_data %>% rename(name = Name, platform = Console, score = Critics score, user_score = Users score, developer = Developer, genre = Genre, players = Number of players, critics = Number of critics, users = Number of users, mdy(game_data$r.date) = Release Date)
game_data_modified <- game_data %>% rename(name = Name, platform = Console, score = Critics_score, user_score = Users_score, developer = Developer, genre = Genre, players = Number_of_players, critics = Number_of_critics, users = Number_of_users, mdy(game_data$r.date) = Release Date)
game_data_modified <- game_data %>% rename(name = Name, platform = Console, score = Critics_score, user_score = Users_score, developer = Developer, genre = Genre, players = Number_of_players, critics = Number_of_critics, users = Number_of_users, mdy(game_data$r.date) = Release_Date)
game_data_modified <- game_data_modified %>% rename(name = Name, platform = Console, score = Critics_score, user_score = Users_score, developer = Developer, genre = Genre, players = Number_of_players, critics = Number_of_critics, users = Number_of_users, mdy(game_data$r.date) = Release_Date)
game_data_modified <- game_data_modified %>% rename(name = Name, platform = Console, score = Critics_score, user_score = Users_score, developer = Developer, genre = Genre, players = Number_of_players, critics = Number_of_critics, users = Number_of_users, mdy(game_data$r.date) = Release_Date)
game_data_modified <- game_data_modified %>% rename(name = Name, platform = Console, score = Critics_score, user_score = Users_score, developer = Developer, genre = Genre, players = Number_of_players, critics = Number_of_critics, users = Number_of_users, mdy(game_data$r.date) = Release_Date)
game_data_modified <- game_data_modified %>% rename(name = Name, platform = Console, score = Critics_score, user_score = Users_score, developer = Developer, genre = Genre, players = Number_of_players, critics = Number_of_critics, users = Number_of_users, mdy(game_data$r.date) = Release_Date)
game_data_modified <- game_data_modified %>% rename(name = Name, platform = Console, score = Critics_score, user_score = Users_score, developer = Developer, genre = Genre, players = Number_of_players, critics = Number_of_critics, users = Number_of_users, mdy(game_data$r.date) = Release_Date)
game_data_modified <- rename(game_data_modified, name = Name, platform = Console, score = Critics_score, user_score = Users_score, developer = Developer, genre = Genre, players = Number_of_players, critics = Number_of_critics, users = Number_of_users, mdy(game_data$r.date) = Release_Date)
game_data_modified = rename(game_data_modified, name = Name, platform = Console, score = Critics_score, user_score = Users_score, developer = Developer, genre = Genre, players = Number_of_players, critics = Number_of_critics, users = Number_of_users, mdy(game_data$r.date) = Release_Date)
game_data_modified <- game_data_modified[,-c(3)] # Eliminamos la columna extra de las fechas.
game_data_modified <- game_data %>% mutate(mdy(game_data$r.date))
str(game_data_modified) # Se creo el objeto para las fechas.
game_data_modified <- game_data_modified[,-c(3)] # Eliminamos la columna extra de las fechas.
game_data_modified = rename(game_data_modified, name = Name, platform = Console, score = Critics_score, user_score = Users_score, developer = Developer, genre = Genre, players = Number_of_players, critics = Number_of_critics, users = Number_of_users, mdy(game_data$r.date) = Release_Date)
game_data_modified <- rename(game_data_modified, name = Name, platform = Console, score = Critics_score, user_score = Users_score, developer = Developer, genre = Genre, players = Number_of_players, critics = Number_of_critics, users = Number_of_users, mdy(game_data$r.date) = Release_Date)
game_data_modified <- rename(game_data_modified, name = Name, platform = Console, score = Critics_score, user_score = Users_score, developer = Developer, genre = Genre, players = Number_of_players, critics = Number_of_critics, users = Number_of_users, mdy(game_data$r.date) = Release_Date)
game_data_modified <- rename(game_data_modified, name = Name, platform = Console, score = Critics_score, user_score = Users_score, developer = Developer, genre = Genre, players = Number_of_players, critics = Number_of_critics, users = Number_of_users)
game_data_modified_new <- rename(game_data_modified, Name = name, Console = platform, Critics_score = score, Users_score = user_score, Developer = developer, Genre = genre, Number_of_players = players, Number_of_critics = critics, Number_of_users = users)
View(game_data_modified_new)
game_data_modified_new <- rename(game_data_modified, Name = name, Console = platform, Critics_score = score, Users_score = user_score, Developer = developer, Genre = genre, Number_of_players = players, Number_of_critics = critics, Number_of_users = users, Release_Date = mdy(game_data$r.date))
game_data_modified_new <- rename(game_data_modified, Name = name, Console = platform, Critics_score = score, Users_score = user_score, Developer = developer, Genre = genre, Number_of_players = players, Number_of_critics = critics, Number_of_users = users, Release_Date = "mdy(game_data$r.date)")
game_data_modified <- game_data_modified %>% rename(Name = name, Console = platform, Critics_score = score, Users_score = user_score, Developer = developer, Genre = genre, Number_of_players = players, Number_of_critics = critics, Number_of_users = users, Release_Date = "mdy(game_data$r.date)")
remove(game_data_modified_new)
str(game_data)
str(game_data_modified)
str(game_data_modified)
game_data_modified <- game_data_modified %>% mutate(as.numeric(Users_score))
game_data_modified <- game_data_modified[,-c(4)] # Se elimina la columna original.
game_data_modified <- game_data_modified %>% rename(Users_score = "as.numeric(Users_score)")
ggplot(game_data_modified, aes(Number_of_users,Users_Score)) +
geom_point() +
facet_wrap("Company") +
ggtitle("Users Score by company") +
xlab("Number of users") +
ylab("Score")
library("dplyr")
library("lubridate")
getwd()
setwd("C:/Users/Carlos Alvarez/Desktop/DemoDay")
game_data <- read.csv(file.choose()) # Usaremos la tabla game_data_exp.
str(game_data) # Tipo de las variables.
game_data_modified <- game_data %>% mutate(Release_Date = mdy(game_data$r.date))
str(game_data_modified) # Se creo el objeto para las fechas.
game_data_modified <- game_data_modified[,-c(4)] # Eliminamos la columna extra de las fechas.
game_data_modified <- game_data_modified %>% rename(Name = name, Console = platform, Company = company, Critics_score = score, Users_score = user_score, Developer = developer, Genre = genre, Number_of_players = players, Number_of_critics = critics, Number_of_users = users)
str(game_data_modified) # Se necesita cambiar el tipo de objeto de la puntuación el usuario.
game_data_modified <- game_data_modified %>% mutate(Users_Score = as.numeric(Users_score))
game_data_modified <- game_data_modified[,-c(5)] # Se elimina la columna original.
str(game_data_modified)
developer_mean <- game_data_modified %>% group_by(Developer) %>% summarise(Mean = mean(Critics_score), n = n())
company_mean <- game_data_modified %>% group_by(Company) %>% summarise(Mean = mean(Critics_score), n = n())
ggplot(game_data_modified, aes(Critics_score)) +
geom_histogram(col = "black", fill= "red") +
ggtitle("Critics score by console") +
xlab("Score") +
ylab("Times") +
geom_vline(xintercept = mean(game_data_modified$Critics_score))
ggplot(game_data_modified, aes(Critics_score)) +
geom_histogram(col = "black", fill= "red") +
ggtitle("Critics score by console") +
xlab("Score") +
ylab("Times") +
geom_vline(xintercept = mean(game_data_modified$Critics_score))
ggplot(game_data_modified, aes(Users_Score)) +
geom_histogram(col = "black", fill= "red") +
ggtitle("Users score by console") +
xlab("Score") +
ylab("Times") +
geom_vline(xintercept = mean(na.omit(game_data_modified$Users_Score)))
ggplot(game_data_modified, aes(Number_of_critics,Critics_score)) +
geom_point() +
facet_wrap("Company") +
ggtitle("Users Score by company") +
xlab("Number of critics") +
ylab("Score")
ggplot(game_data_modified, aes(Number_of_users,Users_Score)) +
geom_point() +
facet_wrap("Company") +
ggtitle("Users Score by company") +
xlab("Number of users") +
ylab("Score")
ggplot(game_data_modified, aes(Critics_score)) +
geom_histogram(col = "black", fill= "red") +
ggtitle("Critics score by console") +
xlab("Score") +
ylab("Times") +
geom_vline(xintercept = mean(game_data_modified$Critics_score))
library("ggplot2")
ggplot(game_data_modified, aes(Critics_score)) +
geom_histogram(col = "black", fill= "red") +
ggtitle("Critics score by console") +
xlab("Score") +
ylab("Times") +
geom_vline(xintercept = mean(game_data_modified$Critics_score))
ggplot(game_data_modified, aes(Users_Score)) +
geom_histogram(col = "black", fill= "red") +
ggtitle("Users score by console") +
xlab("Score") +
ylab("Times") +
geom_vline(xintercept = mean(na.omit(game_data_modified$Users_Score)))
ggplot(game_data_modified, aes(Number_of_critics,Critics_score)) +
geom_point() +
facet_wrap("Company") +
ggtitle("Users Score by company") +
xlab("Number of critics") +
ylab("Score")
ggplot(game_data_modified, aes(Number_of_users,Users_Score)) +
geom_point() +
facet_wrap("Company") +
ggtitle("Users Score by company") +
xlab("Number of users") +
ylab("Score")
ggplot(game_data_modified, aes(filter(game_data_modified$Number_of_users, Number_of_users < 12500),Users_Score)) +
geom_point() +
facet_wrap("Company") +
ggtitle("Users Score by company") +
xlab("Number of users") +
ylab("Score")
View(game_data_modified)
ggplot(game_data_modified, aes(filter(game_data_modified, Number_of_users < 12500),Users_Score)) +
geom_point() +
facet_wrap("Company") +
ggtitle("Users Score by company") +
xlab("Number of users") +
ylab("Score")
ggplot(game_data_modified, aes(filter(game_data_modified, Number_of_users < 12500),Users_Score)) +
geom_point() +
facet_wrap("Company") +
ggtitle("Users Score by company") +
xlab("Number of users") +
ylab("Score")
ggplot(game_data_modified, aes(filter(game_data_modified, Number_of_users > 5000),Users_Score)) +
geom_point() +
facet_wrap("Company") +
ggtitle("Users Score by company") +
xlab("Number of users") +
ylab("Score")
ggplot(game_data_modified, aes(filter(game_data_modified, Name != "The Last of Us Part II"),Users_Score)) +
geom_point() +
facet_wrap("Company") +
ggtitle("Users Score by company") +
xlab("Number of users") +
ylab("Score")
game_data_filtered <- filter(game_data_modified, Name != "The Last of Us Part II")
ggplot(game_data_modified, aes(game_data_filtered,Users_Score)) +
geom_point() +
facet_wrap("Company") +
ggtitle("Users Score by company") +
xlab("Number of users") +
ylab("Score")
ggplot(game_data_filtered, aes(Number_of_critics,Users_Score)) +
geom_point() +
facet_wrap("Company") +
ggtitle("Users Score by company") +
xlab("Number of users") +
ylab("Score")
ggplot(game_data_filtered, aes(Number_of_critics,Users_Score)) +
geom_point() +
facet_wrap("Company") +
ggtitle("Users Score by company") +
xlab("Number of users") +
ylab("Score")
ggplot(game_data_modified, aes(Number_of_critics,Critics_score)) +
geom_point() +
facet_wrap("Company") +
ggtitle("Users Score by company") +
xlab("Number of critics") +
ylab("Score")
ggplot(game_data_modified, aes(Number_of_critics,Critics_score)) +
geom_point() +
facet_wrap("Company") +
ggtitle("Critics Score by company") +
xlab("Number of critics") +
ylab("Score")
ggplot(game_data_filtered, aes(Number_of_critics,Users_Score)) +
geom_point() +
facet_wrap("Company") +
ggtitle("Users Score by company") +
xlab("Number of users") +
ylab("Score")
install.packages("tidyverse")
library("tidyverse")
# Extraemos el año de lanzamiento de cada juego.
game_data_modified$Year <- format(game_data_modified$Release_Date, format = "%Y")
View(game_data_modified)
plot(game_data_modified$Critics_score, game_data_modified$Year)
plot(game_data_modified$Critics_score, game_data_modified$Year)
plot(game_data_modified$Year, game_data_modified$Critics_score)
View(developer_mean)
View(developer_mean)
View(company_mean)
plot(developer_mean$n,developer_mean$Mean)
year_mean <- game_data_modified %>% group_by(Year) %>% summarise(Mean = mean(Critics_score), n = n())
View(year_mean)
year_mean_filtered <- filter(year_mean, n >5)
View(year_mean)
View(year_mean_filtered)
plot(year_mean_filtered$Year, year_mean_filtered$Mean)
View(year_mean_filtered)
year_mean_filtered <- filter(year_mean, n > 20)
plot(year_mean_filtered$Year, year_mean_filtered$Mean)
year_mean_filtered <- filter(year_mean, n > 52)
plot(year_mean_filtered$Year, year_mean_filtered$Mean)
year_mean_users <- game_data_modified %>% group_by(Year) %>% summarise(Mean = mean(Users_Score), n = n())
View(year_mean_users)
game_data_users_filtered <- filter(game_data_modified, Users > 100)
game_data_users_filtered <- filter(game_data_modified, Number_of_users > 100)
View(game_data_users_filtered)
year_mean_users <- game_data_users_filtered %>% group_by(Year) %>% summarise(Mean = mean(Users_Score), n = n())
View(year_mean_users)
plot(year_mean_users$Year, year_mean_users$Mean)
plot(Year = year_mean_users$Year, Number of Users = year_mean_users$Mean)
plot(Year = year_mean_users$Year, Users = year_mean_users$Mean)
plot(year_mean_users$Year, year_mean_users$Mean,
xlab = "Year", ylab = "User Score")
plot(year_mean_filtered$Year, year_mean_filtered$Mean, xlab = "Year", ylab = "Critics Score")
View(year_mean_filtered)
View(year_mean_users)
# Graficamos la popularidad de los videojuegos a través de los años.
plot(year_mean_users$Year, year_mean_users$n)
# Graficamos la popularidad de los videojuegos a través de los años.
plot(year_mean_users$Year, year_mean_users$n,
xlab = "Year", ylab = "Number of players")
library("dplyr")
library("lubridate")
library("ggplot2")
library("tidyverse")
getwd()
setwd("C:/Users/Carlos Alvarez/Desktop/DemoDay")
game_data <- read.csv(file.choose()) # Usaremos la tabla game_data_exp.
str(game_data) # Tipo de las variables.
game_data_modified <- game_data %>% mutate(Release_Date = mdy(game_data$r.date))
str(game_data_modified) # Se creo el objeto para las fechas.
game_data_modified <- game_data_modified[,-c(4)] # Eliminamos la columna extra de las fechas.
game_data_modified <- game_data_modified %>% rename(Name = name, Console = platform, Company = company, Critics_score = score, Users_score = user_score, Developer = developer, Genre = genre, Number_of_players = players, Number_of_critics = critics, Number_of_users = users)
str(game_data_modified) # Se necesita cambiar el tipo de objeto de la puntuación el usuario.
game_data_modified <- game_data_modified %>% mutate(Users_Score = as.numeric(Users_score))
game_data_modified <- game_data_modified[,-c(5)] # Se elimina la columna original.
str(game_data_modified)
group_critics_score <- game_data_modified %>% group_by(Critics_score) %>% summarise(Critics_score, n = n())
View(group_critics_score)
m_log_critics <- glm(group_critics_score$Critics_score ~ group_critics_score$n , data = game_data_modified, family = "binomial")
m_log_critics <- glm(group_critics_score$Critics_score ~ group_critics_score$n , data = group_critics_score, family = "binomial")
m_log_critics <- glm(group_critics_score$n ~ group_critics_score$Critics_score, data = group_critics_score, family = "binomial")
str(group_critics_score)
m_log_critics <- glm(as.factor(group_critics_score$n) ~ group_critics_score$Critics_score, data = group_critics_score, family = "binomial")
View(m_log_critics)
ggplot(data = m_log_critics, aes(x = group_critics_score$Critics_score, y = group_critics_score$n))
ggplot(data = m_log_critics, aes(x = group_critics_score$Critics_score, y = group_critics_score$n)) +
geom_point(aes(color = as.factor(group_critics_score$n)), shape = 1)
ggplot(data = group_critics_score, aes(x = group_critics_score$Critics_score, y = group_critics_score$n)) +
geom_point(aes(color = as.factor(group_critics_score$n)), shape = 1)
ggplot(data = group_critics_score, aes(x = group_critics_score$Critics_score, y = group_critics_score$n)) +
geom_point(aes(color = group_critics_score$n, shape = 1))
ggplot(data = group_critics_score, aes(x = group_critics_score$Critics_score, y = group_critics_score$n)) +
geom_point(aes(color = group_critics_score$n, shape = 1))
as.factor(
ggplot(data = group_critics_score, aes(x = group_critics_score$Critics_score, y = group_critics_score$n)) +
geom_point(aes(color = as.factor(group_critics_score$n)), shape = 1)
ggplot(data = group_critics_score, aes(x = group_critics_score$Critics_score, y = group_critics_score$n)) +
geom_point(aes(color = as.factor(group_critics_score$n)), shape = 1)
ggplot(data = m_log_critics, aes(x = group_critics_score$Critics_score, y = group_critics_score$n)) +
geom_point(aes(color = as.factor(group_critics_score$n)), shape = 1)
if(Critics_score <= 50) {
group_critics_score <- group_critics_score %>% mutate(Factor = as.factor(0))
} else {
group_critics_score <- group_critics_score %>% mutate(Factor = as.factor(1))
}
if(group_critics_score$Critics_score <= 50) {
group_critics_score <- group_critics_score %>% mutate(Factor = as.factor(0))
} else {
group_critics_score <- group_critics_score %>% mutate(Factor = as.factor(1))
}
View(group_critics_score)
if(group_critics_score$Critics_score >= 50) {
group_critics_score <- group_critics_score %>% mutate(Factor = as.factor(0))
} else {
group_critics_score <- group_critics_score %>% mutate(Factor = as.factor(1))
}
View(group_critics_score)
if(group_critics_score$n >= 300) {
group_critics_score <- group_critics_score %>% mutate(Factor = as.factor(1))
} else {
group_critics_score <- group_critics_score %>% mutate(Factor = as.factor(0))
}
if(group_critics_score$n >= 300) {
group_critics_score <- group_critics_score %>% mutate(Factor = as.factor(1))
} else(group_critics_score$n < 300) {
group_critics_score <- group_critics_score %>% mutate(Factor = as.factor(0))
}
if(group_critics_score$n >= 300) {
group_critics_score <- group_critics_score %>% mutate(Factor = as.factor(1))
} else(group_critics_score$n < 300) {
group_critics_score <- group_critics_score %>% mutate(Factor = as.factor(0))
}
if(group_critics_score$n >= 300) {
group_critics_score <- group_critics_score %>% mutate(Factor = as.factor(1))
} else(group_critics_score$n < 300) {
group_critics_score <- group_critics_score %>% mutate(Factor = as.factor(0))
}}
if(group_critics_score$n >= 300) {
group_critics_score <- group_critics_score %>% mutate(Factor = as.factor(1))
} ifelse(group_critics_score$n < 300) {
group_critics_score <- group_critics_score %>% mutate(Factor = as.factor(0))
}
ifelse(group_critics_score$n < 300) {
group_critics_score <- group_critics_score %>% mutate(Factor = as.factor(0))
}
group_critics_score <- group_critics_score %>% mutate(Factor = as.factor(0))}
ifelse(group_critics_score$n >= 300,group_critics_score <- group_critics_score %>% mutate(Factor = as.factor(1)),group_critics_score <- group_critics_score %>% mutate(Factor = as.factor(0))) {
group_critics_score <- group_critics_score %>% mutate(Factor = as.factor(1))}
ifelse(group_critics_score$n >= 300,group_critics_score <- group_critics_score %>% mutate(Factor = as.factor(1)),group_critics_score <- group_critics_score %>% mutate(Factor = as.factor(0)))
View(group_critics_score)
group_critics_score <- group_critics_score %>% mutate(Factor = as.factor(0))}
group_critics_score <- group_critics_score %>% mutate(Factor = as.factor(0))}
}
if(group_critics_score$n >= 300) {
group_critics_score <- group_critics_score %>% mutate(Factor = as.factor(1))
} else {
group_critics_score <- group_critics_score %>% mutate(Factor = as.factor(0))}
}
group_critics_score <- group_critics_score %>% mutate(Factor = as.factor(0))}
group_critics_score <- group_critics_score %>% mutate(Factor = as.factor(0))
if(group_critics_score$n >= 300) {
group_critics_score <- group_critics_score %>% mutate(Factor = as.factor(1))
} else {
group_critics_score <- group_critics_score %>% mutate(Factor = as.factor(0))
View(group_critics_score)
if(group_critics_score$n >= 300) {
group_critics_score <- group_critics_score %>% mutate(Factor = as.factor(1))
} else {
group_critics_score <- group_critics_score %>% mutate(Factor = as.factor(0))
}
if(group_critics_score$n >= 300) {
group_critics_score <- group_critics_score %>% mutate(Factor = as.factor(1))
} else {
group_critics_score <- group_critics_score %>% mutate(Factor = as.factor(0))
}
View(group_critics_score)
View(group_critics_score)
View(group_critics_score)
View(group_critics_score)
View(group_critics_score)
View(group_critics_score)
str(group_critics_score)
View(game_data_modified)
