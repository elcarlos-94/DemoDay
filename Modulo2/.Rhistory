xlab = "Year", ylab = "User Score")
abline(v=c(2000, 2015), lty='dotted', col="tomato")
# Graficamos la calidad de los juegos a?o tras a?o seg?n los jugadores.
game_data_users_filtered <- filter(game_data_modified, Number_of_users > 100)
year_mean_users <- game_data_users_filtered %>% group_by(Year) %>% summarise(Mean = mean(Users_Score), n = n())
mod3 <- lm(year_mean_users$Mean ~ bs(year_mean_users$Year, knots=c(2000, 2015), degree=3), data=year_mean_users)
plot(year_mean_users$Year, year_mean_users$Mean,
xlab = "Year", ylab = "User Score")
abline(v=c(2000, 2015), lty='dotted', col="tomato")
abline(mod3)
View(mod3)
# Graficamos la calidad de los juegos a?o tras a?o seg?n los jugadores.
game_data_users_filtered <- filter(game_data_modified, Number_of_users > 100)
year_mean_users <- game_data_users_filtered %>% group_by(Year) %>% summarise(Mean = mean(Users_Score), n = n())
mod3 <- lm(year_mean_users$Mean ~ bs(year_mean_users$Year, knots=c(2000, 2015), degree=3), data=year_mean_users)
plot(year_mean_users$Year, year_mean_users$Mean,
xlab = "Year", ylab = "User Score")
abline(v=c(2000, 2015), lty='dotted', col="tomato")
lines(year_mean_users$Year[i], fitted(mod3)[i], col='orange', lwd=1)
# Graficamos la calidad de los juegos a?o tras a?o seg?n los jugadores.
game_data_users_filtered <- filter(game_data_modified, Number_of_users > 100)
year_mean_users <- game_data_users_filtered %>% group_by(Year) %>% summarise(Mean = mean(Users_Score), n = n())
mod3 <- lm(year_mean_users$Mean ~ bs(year_mean_users$Year, knots=c(2000, 2015), degree=3), data=year_mean_users)
plot(year_mean_users$Year, year_mean_users$Mean,
xlab = "Year", ylab = "User Score")
abline(v=c(2000, 2015), lty='dotted', col="tomato")
i1 <- order(year_mean_users$Year)
lines(year_mean_users$Year[i1], fitted(mod3)[i1], col='orange', lwd=1)
lines(year_mean_users$Year[i1], fitted(mod3)[i1], col='red', lwd=1)
mod3 <- lm(year_mean_users$Mean ~ bs(year_mean_users$Year, knots=c(1998, 2017), degree=3), data=year_mean_users)
plot(year_mean_users$Year, year_mean_users$Mean,
xlab = "Year", ylab = "User Score")
i1 <- order(year_mean_users$Year)
lines(year_mean_users$Year[i1], fitted(mod3)[i1], col='red', lwd=1)
# Graficamos la calidad de los juegos a?o tras a?o seg?n los jugadores.
game_data_users_filtered <- filter(game_data_modified, Number_of_users > 100)
year_mean_users <- game_data_users_filtered %>% group_by(Year) %>% summarise(Mean = mean(Users_Score), n = n())
mod3 <- lm(year_mean_users$Mean ~ bs(year_mean_users$Year, knots=c(2000, 2015), degree=3), data=year_mean_users)
plot(year_mean_users$Year, year_mean_users$Mean,
xlab = "Year", ylab = "User Score")
i1 <- order(year_mean_users$Year)
lines(year_mean_users$Year[i1], fitted(mod3)[i1], col='red', lwd=1)
mod3 <- lm(year_mean_users$Mean ~ bs(year_mean_users$Year, knots=c(2000, 2015), degree=4), data=year_mean_users)
plot(year_mean_users$Year, year_mean_users$Mean,
xlab = "Year", ylab = "User Score")
i1 <- order(year_mean_users$Year)
lines(year_mean_users$Year[i1], fitted(mod3)[i1], col='red', lwd=1)
mod3 <- lm(year_mean_users$Mean ~ bs(year_mean_users$Year, knots=c(2000, 2015), degree=3), data=year_mean_users)
plot(year_mean_users$Year, year_mean_users$Mean,
xlab = "Year", ylab = "User Score")
i1 <- order(year_mean_users$Year)
lines(year_mean_users$Year[i1], fitted(mod3)[i1], col='red', lwd=1)
abline(lsfit(year_mean_users$Year, year_mean_users$Mean))
lines(year_mean_users$Year[i1], fitted(mod3)[i1], col='red', lwd=2)
abline(lsfit(year_mean_users$Year, year_mean_users$Mean, lwd=2))
abline(lsfit(year_mean_users$Year, year_mean_users$Mean), lwd = 2)
# Graficamos la calidad de los juegos a?o tras a?o seg?n la cr?tica.
year_mean <- game_data_modified %>% group_by(Year) %>% summarise(Mean = mean(Critics_score), n = n())
year_mean_filtered <- filter(year_mean, n > 52)
plot(year_mean_filtered$Year, year_mean_filtered$Mean, xlab = "Year", ylab = "Critics Score")
spline_users <- lm(year_mean_filtered$Mean ~ bs(year_mean_filtered$Year, knots=c(2000, 2015), degree=3), data=year_mean_users)
# Graficamos la calidad de los juegos a?o tras a?o seg?n la cr?tica.
year_mean <- game_data_modified %>% group_by(Year) %>% summarise(Mean = mean(Critics_score), n = n())
year_mean_filtered <- filter(year_mean, n > 52)
spline_critics <- lm(year_mean_filtered$Mean ~ bs(year_mean_filtered$Year, knots=c(2000, 2015), degree=3), data=year_mean_filtered)
plot(year_mean_filtered$Year, year_mean_filtered$Mean, xlab = "Year", ylab = "Critics Score")
i2 <- order(year_mean_filtered$Year)
lines(year_mean_filtered$Year[i1], fitted(spline_critics)[i1], col='red', lwd=2)
# Graficamos la calidad de los juegos a?o tras a?o seg?n la cr?tica.
year_mean <- game_data_modified %>% group_by(Year) %>% summarise(Mean = mean(Critics_score), n = n())
year_mean_filtered <- filter(year_mean, n > 52)
spline_critics <- lm(year_mean_filtered$Mean ~ bs(year_mean_filtered$Year, knots=c(2000, 2015), degree=8), data=year_mean_filtered)
plot(year_mean_filtered$Year, year_mean_filtered$Mean, xlab = "Year", ylab = "Critics Score")
i2 <- order(year_mean_filtered$Year)
lines(year_mean_filtered$Year[i1], fitted(spline_critics)[i1], col='red', lwd=2)
spline_critics <- lm(year_mean_filtered$Mean ~ bs(year_mean_filtered$Year, knots=c(2000, 2015), degree=10), data=year_mean_filtered)
plot(year_mean_filtered$Year, year_mean_filtered$Mean, xlab = "Year", ylab = "Critics Score")
i2 <- order(year_mean_filtered$Year)
lines(year_mean_filtered$Year[i1], fitted(spline_critics)[i1], col='red', lwd=2)
spline_critics <- lm(year_mean_filtered$Mean ~ bs(year_mean_filtered$Year, knots=c(2000, 2015), degree=9), data=year_mean_filtered)
plot(year_mean_filtered$Year, year_mean_filtered$Mean, xlab = "Year", ylab = "Critics Score")
i2 <- order(year_mean_filtered$Year)
lines(year_mean_filtered$Year[i1], fitted(spline_critics)[i1], col='red', lwd=2)
spline_critics <- lm(year_mean_filtered$Mean ~ bs(year_mean_filtered$Year, knots=c(2000, 2015), degree=9), data=year_mean_filtered)
plot(year_mean_filtered$Year, year_mean_filtered$Mean, xlab = "Year", ylab = "Critics Score")
i2 <- order(year_mean_filtered$Year)
lines(year_mean_filtered$Year[i2], fitted(spline_critics)[i2], col='red', lwd=2)
spline_critics <- lm(year_mean_filtered$Mean ~ bs(year_mean_filtered$Year, knots=c(2000, 2015), degree=4), data=year_mean_filtered)
plot(year_mean_filtered$Year, year_mean_filtered$Mean, xlab = "Year", ylab = "Critics Score")
i2 <- order(year_mean_filtered$Year)
lines(year_mean_filtered$Year[i2], fitted(spline_critics)[i2], col='red', lwd=2)
abline(lsfit(year_mean_filtered$Year, year_mean_filtered$Mean))
abline(lsfit(year_mean_filtered$Year, year_mean_filtered$Mean), lwd=2)
spline_critics <- lm(year_mean_filtered$Mean ~ bs(year_mean_filtered$Year, knots=c(2005, 2015), degree=4), data=year_mean_filtered)
plot(year_mean_filtered$Year, year_mean_filtered$Mean, xlab = "Year", ylab = "Critics Score")
i1 <- order(year_mean_filtered$Year)
lines(year_mean_filtered$Year[i1], fitted(spline_critics)[i1], col='red', lwd=2)
abline(lsfit(year_mean_filtered$Year, year_mean_filtered$Mean), lwd=2)
spline_critics <- lm(year_mean_filtered$Mean ~ bs(year_mean_filtered$Year, knots=c(2005, 2015), degree=5), data=year_mean_filtered)
plot(year_mean_filtered$Year, year_mean_filtered$Mean, xlab = "Year", ylab = "Critics Score")
i1 <- order(year_mean_filtered$Year)
lines(year_mean_filtered$Year[i1], fitted(spline_critics)[i1], col='red', lwd=2)
spline_critics <- lm(year_mean_filtered$Mean ~ bs(year_mean_filtered$Year, knots=c(2005, 2015), degree=4.5), data=year_mean_filtered)
plot(year_mean_filtered$Year, year_mean_filtered$Mean, xlab = "Year", ylab = "Critics Score")
i1 <- order(year_mean_filtered$Year)
lines(year_mean_filtered$Year[i1], fitted(spline_critics)[i1], col='red', lwd=2)
prob_users <- 1 - pnorm(q = (6.0)^2, mean = mean_users, sd = sd_users)
prob_users <- 1 - pnorm(q = (8.0)^2, mean = mean_users, sd = sd_users)
prob_users <- 1 - pnorm(q = (6.0)^2, mean = mean_users, sd = sd_users)
prob_users <- 1 - pnorm(q = (8.0)^2, mean = mean_users, sd = sd_users)
prob_users <- 1 - pnorm(q = (6.0)^2, mean = mean_users, sd = sd_users)
prob_users <- 1 - pnorm(q = (8.0)^2, mean = mean_users, sd = sd_users)
prob_users <- 1 - pnorm(q = (5.0)^2, mean = mean_users, sd = sd_users)
prob_users <- 1 - pnorm(q = (8.0)^2, mean = mean_users, sd = sd_users)
prob_users <- 1 - pnorm(q = (1.0)^2, mean = mean_users, sd = sd_users)
prob_users <- 1 - pnorm(q = (8.0)^2, mean = mean_users, sd = sd_users)
prob_users <- 1 - pnorm(q = (9.0)^2, mean = mean_users, sd = sd_users)
prob_users <- 1 - pnorm(q = (7.0)^2, mean = mean_users, sd = sd_users)
prob_users <- 1 - pnorm(q = (8.0)^2, mean = mean_users, sd = sd_users)
prob_critics <- pnorm(q = (60)^2, mean = mean_critics, sd = sd_critics)
prob_critics <- pnorm(q = (80)^2, mean = mean_critics, sd = sd_critics)
prob_critics <- 1 - pnorm(q = (60)^2, mean = mean_critics, sd = sd_critics)
prob_critics <- 1 - pnorm(q = (80)^2, mean = mean_critics, sd = sd_critics)
# Graficamos la popularidad de los videojuegos a trav?s de los a?os
spline_users_years <- lm(year_mean_users$n ~ bs(year_mean_users$Year, knots=c(2000, 2015), degree=3), data=year_mean_users)
plot(year_mean_users$Year, year_mean_users$n,
xlab = "Year", ylab = "Number of players")
i3 <- order(year_mean_users$Year)
lines(year_mean_users$Year[i3], fitted(spline_users_years)[i3], col='red', lwd=2)
abline(lsfit(year_mean_users$Year, year_mean_users$n))
# Graficamos la popularidad de los videojuegos a trav?s de los a?os
spline_users_years <- lm(year_mean_users$n ~ bs(year_mean_users$Year, knots=c(2000, 2015), degree=5), data=year_mean_users)
plot(year_mean_users$Year, year_mean_users$n,
xlab = "Year", ylab = "Number of players")
i3 <- order(year_mean_users$Year)
lines(year_mean_users$Year[i3], fitted(spline_users_years)[i3], col='red', lwd=2)
abline(lsfit(year_mean_users$Year, year_mean_users$n))
abline(lsfit(year_mean_users$Year, year_mean_users$n), lwd=2)
game_data_filtered <- filter(game_data_modified, Name != "The Last of Us Part II") # Se filtr? este dato ya que es un n?mero grande.
ggplot(game_data_filtered, aes(Number_of_critics,Users_Score)) +
geom_point() +
facet_wrap("Company") +
ggtitle("Users Score by company") +
xlab("Number of users") +
ylab("Score") +
title("Relationship between number of user and score for company")
ggplot(game_data_filtered, aes(Number_of_users,Users_Score)) +
geom_point() +
facet_wrap("Company") +
ggtitle("Users Score by company") +
xlab("Number of users") +
ylab("Score") +
title("Relationship between number of user and score for company")
ggplot(game_data_filtered, aes(Number_of_critics,Critics_score)) +
geom_point() +
facet_wrap("Company") +
ggtitle("Users Score by company") +
xlab("Number of users") +
ylab("Score") +
title("Relationship between number of user and score for company")
ggplot(game_data_filtered, aes(Number_of_users,Users_Score)) +
geom_point() +
facet_wrap("Company") +
ggtitle("Users Score by company") +
xlab("Number of users") +
ylab("Score") +
title("Relationship between number of user and score for company")
View(game_data_users_filtered)
View(game_data_filtered)
game_data_filtered <- filter(game_data_modified, Name != "Warcraft III: Reforged")
ggplot(game_data_filtered, aes(Number_of_users,Users_Score)) +
geom_point() +
facet_wrap("Company") +
ggtitle("Users Score by company") +
xlab("Number of users") +
ylab("Score") +
title("Relationship between number of users and score per company")
game_data_filtered <- filter(game_data_modified, Name != "The Last of Us Part II") # Se filtró este dato ya que es un n?mero grande.
ggplot(game_data_filtered, aes(Number_of_critics,Critics_score)) +
geom_point() +
facet_wrap("Company") +
ggtitle("Critics Score by company") +
xlab("Number of users") +
ylab("Score") +
title("Relationship between number of critics and score per company")
game_data_filtered_game_critics <- filter(game_data_filtered_game_critics, Name != "The Last of Us Part II") # Se filtró este dato ya que es un n?mero grande.
ggplot(game_data_filtered, aes(Number_of_critics,Critics_score)) +
geom_point() +
facet_wrap("Company") +
ggtitle("Critics Score by company") +
xlab("Number of users") +
ylab("Score") +
title("Relationship between number of critics and score per company")
ggplot(game_data_filtered, aes(Number_of_users,Users_Score)) +
geom_point() +
facet_wrap("Company") +
ggtitle("Users Score by company") +
xlab("Number of users") +
ylab("Score") +
title("Relationship between number of users and score per company")
game_data_filtered_game_users <- filter(game_data_modified, Name != "Warcraft III: Reforged")
ggplot(game_data_filtered_game_users, aes(Number_of_users,Users_Score)) +
geom_point() +
facet_wrap("Company") +
ggtitle("Users Score by company") +
xlab("Number of users") +
ylab("Score") +
title("Relationship between number of users and score per company")
View(game_data_filtered_game_users)
game_data_filtered_game_critics <- filter(game_data_modified, Name != "The Last of Us Part II") # Se filtró este dato ya que es un n?mero grande.
ggplot(game_data_filtered, aes(Number_of_critics,Critics_score)) +
geom_point() +
facet_wrap("Company") +
ggtitle("Critics Score by company") +
xlab("Number of users") +
ylab("Score") +
title("Relationship between number of critics and score per company")
game_data_filtered_game_users <- filter(game_data_modified, Name != "The Last of Us Part II")
ggplot(game_data_filtered_game_users, aes(Number_of_users,Users_Score)) +
geom_point() +
facet_wrap("Company") +
ggtitle("Users Score by company") +
xlab("Number of users") +
ylab("Score") +
title("Relationship between number of users and score per company")
View(game_data_modified)
game_data_filtered_game_critics <- filter(game_data_modified, Name != "The Last of Us Part II") # Se filtró este dato ya que es un n?mero grande.
ggplot(game_data_filtered_game_critics, aes(Number_of_critics,Critics_score)) +
geom_point() +
facet_wrap("Company") +
ggtitle("Critics Score by company") +
xlab("Number of users") +
ylab("Score") +
title("Relationship between number of critics and score per company")
View(game_data_modified)
game_data_filtered_game_users <- filter(game_data_modified, Name != "The Last of Us Part II")
ggplot(game_data_filtered_game_users, aes(Number_of_users,Users_Score)) +
geom_point() +
facet_wrap("Company") +
ggtitle("Users Score by company") +
xlab("Number of users") +
ylab("Score") +
title("Relationship between number of users and score per company")
View(game_data_filtered_game_users)
game_data_filtered_game_users <- filter(game_data_modified, Name != "Warcraft III: Reforged")
ggplot(game_data_filtered_game_users, aes(Number_of_users,Users_Score)) +
geom_point() +
facet_wrap("Company") +
ggtitle("Users Score by company") +
xlab("Number of users") +
ylab("Score") +
title("Relationship between number of users and score per company")
View(game_data_filtered_game_users)
game_data_filtered_game_users <- filter(game_data_modified, Name != "The Last of Us Part II")
ggplot(game_data_filtered_game_users, aes(Number_of_users,Users_Score)) +
geom_point() +
facet_wrap("Company") +
ggtitle("Users Score by company") +
xlab("Number of users") +
ylab("Score") +
title("Relationship between number of users and score per company")
View(game_data_modified)
game_data_filtered_game_users <- filter(game_data_modified, Name != "The Last of Us Part II" && Name != "Warcraft III: Reforged") # Se filtraron estos datos ya que es un número grande.
ggplot(game_data_filtered_game_users, aes(Number_of_users,Users_Score)) +
geom_point() +
facet_wrap("Company") +
ggtitle("Users Score by company") +
xlab("Number of users") +
ylab("Score") +
title("Relationship between number of users and score per company")
ggplot(game_data_modified, aes(Number_of_critics,Critics_score)) +
geom_point() +
facet_wrap("Company") +
ggtitle("Critics Score by company") +
xlab("Number of users") +
ylab("Score") +
title("Relationship between number of critics and score per company")
game_data_filtered_game_users <- filter(game_data_modified, Name != "The Last of Us Part II" && Name != "Warcraft III: Reforged") # Se filtraron estos datos ya que es un número grande.
ggplot(game_data_filtered_game_users, aes(Number_of_users,Users_Score)) +
geom_point() +
facet_wrap("Company") +
ggtitle("Users Score by company") +
xlab("Number of users") +
ylab("Score") +
title("Relationship between number of users and score per company")
game_data_filtered_game_users <- filter(game_data_modified, (Name != "The Last of Us Part II" && Name != "Warcraft III: Reforged")) # Se filtraron estos datos ya que es un número grande.
ggplot(game_data_filtered_game_users, aes(Number_of_users,Users_Score)) +
geom_point() +
facet_wrap("Company") +
ggtitle("Users Score by company") +
xlab("Number of users") +
ylab("Score") +
title("Relationship between number of users and score per company")
game_data_filtered_game_users <- filter(game_data_modified, Number_of_users < 50000) # Se filtraron estos datos ya que es un número grande.
ggplot(game_data_filtered_game_users, aes(Number_of_users,Users_Score)) +
geom_point() +
facet_wrap("Company") +
ggtitle("Users Score by company") +
xlab("Number of users") +
ylab("Score") +
title("Relationship between number of users and score per company")
game_data_filtered_game_users <- filter(game_data_modified, Number_of_users < 30000) # Se filtraron estos datos ya que es un número grande.
ggplot(game_data_filtered_game_users, aes(Number_of_users,Users_Score)) +
geom_point() +
facet_wrap("Company") +
ggtitle("Users Score by company") +
xlab("Number of users") +
ylab("Score") +
title("Relationship between number of users and score per company")
game_data_filtered_game_users <- filter(game_data_modified, Number_of_users < 20000) # Se filtraron estos datos ya que es un número grande.
ggplot(game_data_filtered_game_users, aes(Number_of_users,Users_Score)) +
geom_point() +
facet_wrap("Company") +
ggtitle("Users Score by company") +
xlab("Number of users") +
ylab("Score") +
title("Relationship between number of users and score per company")
(q1 <- qnorm(p = 0.75, mean = mean_critics, sd = sd_critics))
prob_critics <- 1 - pnorm(q = q1, mean = mean_critics, sd = sd_critics)
(prob_critics <- 1 - pnorm(q = q1, mean = mean_critics, sd = sd_critics))
prob_critics <- 1 - pnorm(q = (80)^2, mean = mean_critics, sd = sd_critics)
(prob_critics <- 1 - pnorm(q = (80)^2, mean = mean_critics, sd = sd_critics))
(prob_critics <- 1 - pnorm(q = (60)^2, mean = mean_critics, sd = sd_critics))
(prob_critics <- 1 - pnorm(q = (60)^2, mean = mean_critics, sd = sd_critics))
(prob_critics <- 1 - pnorm(q = (80)^2, mean = mean_critics, sd = sd_critics))
(prob_critics <- 1 - pnorm(q = (60)^2, mean = mean_critics, sd = sd_critics))
(prob_critics <- 1 - pnorm(q = (70)^2, mean = mean_critics, sd = sd_critics))
(prob_critics <- 1 - pnorm(q = (80)^2, mean = mean_critics, sd = sd_critics))
(prob_users <- 1 - pnorm(q = (6.0)^2, mean = mean_users, sd = sd_users))
(prob_users <- 1 - pnorm(q = (7.0)^2, mean = mean_users, sd = sd_users))
(prob_users <- 1 - pnorm(q = (8.0)^2, mean = mean_users, sd = sd_users))
library("dplyr")
library("lubridate")
library("ggplot2")
library("tidyverse")
require(splines)
getwd()
setwd("C:/Users/Carlos Alvarez/Desktop/DemoDay/Modulo2")
game_data <- read.csv(file.choose()) # Usaremos la tabla game_data_exp.
library("dplyr")
library("lubridate")
library("ggplot2")
library("tidyverse")
require(splines)
getwd()
setwd("C:/Users/Carlos Alvarez/Desktop/DemoDay/Modulo2")
game_data <- read.csv(file.choose()) # Usaremos la tabla game_data_exp.
str(game_data) # Tipo de las variables.
game_data_modified <- game_data %>% mutate(Release_Date = mdy(game_data$r.date))
str(game_data_modified) # Se creo el objeto para las fechas.
game_data_modified <- game_data_modified[,-c(4)] # Eliminamos la columna extra de las fechas.
game_data_modified <- game_data_modified %>% rename(Name = name, Console = platform, Company = company, Critics_score = score, Users_score = user_score, Developer = developer, Genre = genre, Number_of_players = players, Number_of_critics = critics, Number_of_users = users)
str(game_data_modified) # Se necesita cambiar el tipo de objeto de la puntuación el usuario.
game_data_modified <- game_data_modified %>% mutate(Users_Score = as.numeric(Users_score))
game_data_modified <- game_data_modified[,-c(5)] # Se elimina la columna original.
str(game_data_modified) # Data frame actual
ggplot(game_data_modified, aes(Critics_score)) +
geom_histogram(col = "black", fill= "red") +
ggtitle("Critics score by console") +
xlab("Score") +
ylab("Times") +
geom_vline(xintercept = mean(game_data_modified$Critics_score))
ggplot(game_data_modified, aes((Critics_score)^2)) +
geom_histogram(col = "black", fill= "red") +
ggtitle("Critics score by console") +
xlab("Score^2") +
ylab("Times") +
geom_vline(xintercept = (mean(game_data_modified$Critics_score))^2)
sd_critics <- sd((game_data_modified$Critics_score)^2)
mean_critics <- (mean(game_data_modified$Critics_score))^2
(prob_critics <- 1 - pnorm(q = (60)^2, mean = mean_critics, sd = sd_critics))
(prob_critics <- 1 - pnorm(q = (70)^2, mean = mean_critics, sd = sd_critics))
(prob_critics <- 1 - pnorm(q = (60)^2, mean = mean_critics, sd = sd_critics))
(prob_critics <- 1 - pnorm(q = (70)^2, mean = mean_critics, sd = sd_critics))
(prob_critics <- 1 - pnorm(q = (80)^2, mean = mean_critics, sd = sd_critics))
ggplot(game_data_modified, aes(Users_Score)) +
geom_histogram(col = "black", fill= "red") +
ggtitle("Users score by console") +
xlab("Score") +
ylab("Times") +
geom_vline(xintercept = mean(na.omit(game_data_modified$Users_Score)))
ggplot(game_data_modified, aes((Users_Score)^2)) +
geom_histogram(col = "black", fill= "red") +
ggtitle("Users score by console") +
xlab("Score^2") +
ylab("Times") +
geom_vline(xintercept = (mean(na.omit(game_data_modified$Users_Score))^2))
sd_users <- sd(na.omit(game_data_modified$Users_Score)^2)
mean_users <- (mean(na.omit(game_data_modified$Users_Score))^2)
(prob_users <- 1 - pnorm(q = (6.0)^2, mean = mean_users, sd = sd_users))
(prob_users <- 1 - pnorm(q = (7.0)^2, mean = mean_users, sd = sd_users))
(prob_users <- 1 - pnorm(q = (8.0)^2, mean = mean_users, sd = sd_users))
ggplot(game_data_modified, aes(Number_of_critics,Critics_score)) +
geom_point() +
facet_wrap("Company") +
ggtitle("Critics Score by company") +
xlab("Number of users") +
ylab("Score") +
title("Relationship between number of critics and score per company")
game_data_filtered_game_users <- filter(game_data_modified, Number_of_users < 20000) # Se filtraron estos datos ya que es un número grande.
ggplot(game_data_filtered_game_users, aes(Number_of_users,Users_Score)) +
geom_point() +
facet_wrap("Company") +
ggtitle("Users Score by company") +
xlab("Number of users") +
ylab("Score") +
title("Relationship between number of users and score per company")
game_data_filtered_game_users <- filter(game_data_modified, Number_of_users < 20000) # Se filtraron estos datos ya que es un número grande.
ggplot(game_data_filtered_game_users, aes(Number_of_users,Users_Score)) +
geom_point() +
facet_wrap("Company") +
ggtitle("Users Score by company") +
xlab("Number of users") +
ylab("Score")
ggplot(game_data_modified, aes(Number_of_critics,Critics_score)) +
geom_point() +
facet_wrap("Company") +
ggtitle("Critics Score by company") +
xlab("Number of users") +
ylab("Score") +
title("Relationship between number of critics and score per company")
ggplot(game_data_modified, aes(Number_of_critics,Critics_score)) +
geom_point() +
facet_wrap("Company") +
ggtitle("Critics Score by company") +
xlab("Number of users") +
ylab("Score") +
game_data_filtered_game_users <- filter(game_data_modified, Number_of_users < 20000) # Se filtraron estos datos ya que es un número grande.
ggplot(game_data_modified, aes(Number_of_critics,Critics_score)) +
geom_point() +
facet_wrap("Company") +
ggtitle("Critics Score by company") +
xlab("Number of users") +
ylab("Score") +
game_data_filtered_game_users <- filter(game_data_modified, Number_of_users < 20000) # Se filtraron estos datos ya que es un número grande.
ggplot(game_data_filtered_game_users, aes(Number_of_users,Users_Score)) +
geom_point() +
facet_wrap("Company") +
ggtitle("Users Score by company") +
xlab("Number of users") +
ylab("Score")
ggplot(game_data_modified, aes(Number_of_critics,Critics_score)) +
geom_point() +
facet_wrap("Company") +
ggtitle("Critics Score by company") +
xlab("Number of users") +
ylab("Score") +
game_data_filtered_game_users <- filter(game_data_modified, Number_of_users < 20000) # Se filtraron estos datos ya que es un número grande.
ggplot(game_data_modified, aes(Number_of_critics,Critics_score)) +
geom_point() +
facet_wrap("Company") +
ggtitle("Critics Score by company") +
xlab("Number of users") +
ylab("Score")
# Extraemos el a?o de lanzamiento de cada juego.
game_data_modified$Year <- format(game_data_modified$Release_Date, format = "%Y")
# Graficamos la calidad de los juegos a?o tras a?o seg?n la cr?tica.
year_mean <- game_data_modified %>% group_by(Year) %>% summarise(Mean = mean(Critics_score), n = n())
year_mean_filtered <- filter(year_mean, n > 52)
spline_critics <- lm(year_mean_filtered$Mean ~ bs(year_mean_filtered$Year, knots=c(2005, 2015), degree=4.5), data=year_mean_filtered)
plot(year_mean_filtered$Year, year_mean_filtered$Mean, xlab = "Year", ylab = "Critics Score")
i1 <- order(year_mean_filtered$Year)
lines(year_mean_filtered$Year[i1], fitted(spline_critics)[i1], col='red', lwd=2)
abline(lsfit(year_mean_filtered$Year, year_mean_filtered$Mean), lwd=2)
game_data_users_filtered <- filter(game_data_modified, Number_of_users > 100)
year_mean_users <- game_data_users_filtered %>% group_by(Year) %>% summarise(Mean = mean(Users_Score), n = n())
spline_users <- lm(year_mean_users$Mean ~ bs(year_mean_users$Year, knots=c(2000, 2015), degree=3), data=year_mean_users)
plot(year_mean_users$Year, year_mean_users$Mean,
xlab = "Year", ylab = "User Score")
i2 <- order(year_mean_users$Year)
lines(year_mean_users$Year[i2], fitted(spline_users)[i2], col='red', lwd=2)
abline(lsfit(year_mean_users$Year, year_mean_users$Mean), lwd = 2)
# Graficamos la popularidad de los videojuegos a trav?s de los a?os
spline_users_years <- lm(year_mean_users$n ~ bs(year_mean_users$Year, knots=c(2000, 2015), degree=5), data=year_mean_users)
plot(year_mean_users$Year, year_mean_users$n,
xlab = "Year", ylab = "Number of players")
i3 <- order(year_mean_users$Year)
lines(year_mean_users$Year[i3], fitted(spline_users_years)[i3], col='red', lwd=2)
abline(lsfit(year_mean_users$Year, year_mean_users$n), lwd=2)
shiny::runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
